/*Given an array of length N and an integer x, you need to find all the indexes where x is present in the input array. Save all the indexes in an array (in increasing order).
Do this recursively. Indexing in the array starts from 0.*/



import java.util.*;
public class Solution {
  
    public static ArrayList<Integer> allIndexes(int input[], int i, int x,ArrayList<Integer> output) {
        if(i==input.length){
            return output;
        }
        if(input[i]==x){
            output.add(i);
        }
        return allIndexes(input,i+1,x,output);
    }
	public static int[] allIndexes(int input[], int x) {
		/* Your class should be named Solution
		 * Don't write main().
		 * Don't read input, it is passed as function argument.
		 * Return output and don't print it.
	 	 * Taking input and printing output is handled automatically.
		*/
		// int output[]=new int[input.length];
        ArrayList<Integer> output=new ArrayList<>();
        output=allIndexes(input,0,x,output);
        int[] arr = new int[output.size()];
        for(int i = 0; i < output.size(); i++) {
            arr[i] = output.get(i);
        }
        return arr;
    }
}
