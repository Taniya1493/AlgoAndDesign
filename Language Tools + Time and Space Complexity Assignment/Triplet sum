/*You have been given a random integer array/list(ARR) and a number X. Find and return the triplet(s) in the array/list which sum to X.*/





import java.util.*;
public class Solution {	

	public static int tripletSum(int[] arr, int num) {
		//Your code goes here
    
        //  int c=0;
        // Arrays.sort(arr);
        // for(int i=0;i<arr.length-2;i++){
        //     int l=i+1;
        //     int r=arr.length-1;
        //     while(l<r){
        //         if(arr[i]+arr[l]+arr[r]==num){  
        //             c++; r--;
        //         }
        //         else if(arr[i]+arr[l]+arr[r]<num)
        //             l++;
        //         else
        //             r--;
        //     }
        // }
        // return c;
        
        int c=0;
        for (int i = 0; i < arr.length; i++) {
            HashSet<Integer> s = new HashSet<Integer>();
            int curr_sum = num - arr[i];
            for (int j = i + 1; j < arr.length; j++)
            {
                if (s.contains(curr_sum - arr[j]))
                {
                    c++;
                }
                s.add(arr[j]);
            }
	    }
        return c;
    }
}
